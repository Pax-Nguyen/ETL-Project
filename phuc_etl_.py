# -*- coding: utf-8 -*-
"""Phuc ETL .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lubpzpLBaTR46WAvWvK1LXlwnGd4BVWk
"""



"""# 1. Extract Data

We have different part of data stored in different sources

## 1.1. Enrollee's data
"""

import pandas as pd

#https://docs.google.com/spreadsheets/d/1VCkHwBjJGRJ21asd9pxW4_0z2PWuKhbLR3gUHm-p4GI/edit?gid=1274608348#gid=1274608348

sheet_id = '1VCkHwBjJGRJ21asd9pxW4_0z2PWuKhbLR3gUHm-p4GI'  # example ID
url = f'https://docs.google.com/spreadsheets/d/{sheet_id}/export?format=csv'

df_enrollies = pd.read_csv(url)
print(df_enrollies.head())

"""## 1.2. Enrollees's Education"""

df_enrollee_education = pd.read_excel("enrollies_education.xlsx")
print(df_enrollee_education.head())



"""## 1.3. Enrollee's Experiences"""

df_enrollee_experiences = pd.read_csv("work_experience.csv")
print(df_enrollee_experiences.head())

"""## 1.4. Enrollee's Training Hours"""

import pandas as pd
from sqlalchemy import create_engine

# Connection details
username = 'etl_practice'
password = '550814'
host = '112.213.86.31'
port = '3360'
database = 'company_course'
table = 'training_hours'

# Create connection string
connection_str = f'mysql+pymysql://{username}:{password}@{host}:{port}/{database}'

# Create SQLAlchemy engine
engine = create_engine(connection_str)

# Query the table
query = f"SELECT * FROM {table}"
df_training_hours = pd.read_sql(query, engine)

# Preview the data
print(df_training_hours.sample(5))

"""## 1.5. City Developement Index"""

import pandas as pd

# URL of the page
url = "https://sca-programming-school.github.io/city_development_index/index.html"

# Read tables from the page
tables = pd.read_html(url)

# View how many tables were found
print(f"Found {len(tables)} table(s)")

# View the first table (or loop if needed)
df_CDI = tables[0]
print(df_CDI.head())

"""## 1.6. Employment"""

import pandas as pd
from sqlalchemy import create_engine

# Connection details
username = 'etl_practice'
password = '550814'
host = '112.213.86.31'
port = '3360'
database = 'company_course'
table = 'employment'

# Create connection string
connection_str = f'mysql+pymysql://{username}:{password}@{host}:{port}/{database}'

# Create SQLAlchemy engine
engine = create_engine(connection_str)

# Query the table
query = f"SELECT * FROM {table}"
df_emploment = pd.read_sql(query, engine)

# Preview the data
print(df_emploment.sample(5))

"""# 2. Transform Data

## 1.1. Enrollee's data
"""

#check the data information

df_enrollies.info()

##convert data into suitable types

df_enrollies['full_name'] = df_enrollies['full_name'].astype('string')
df_enrollies['city'] = df_enrollies['city'].astype('category')
df_enrollies['gender'] = df_enrollies['gender'].astype('category')

df_enrollies.info()

# Handling missing values with MODE value

df_enrollies['gender'].fillna(df_enrollies['gender'].mode()[0], inplace=True)

df_enrollies.info()

"""## 1.2. Enrollees's Education"""

# check data information

df_enrollee_education.info()

# Handling with missing data

df_enrollee_education['enrolled_university'].fillna('Unknown', inplace=True)
df_enrollee_education['education_level'].fillna('Unknown', inplace=True)
df_enrollee_education['major_discipline'].fillna('Other', inplace=True)

# Change data types

df_enrollee_education['enrolled_university'] = df_enrollee_education['enrolled_university'].astype('category')
df_enrollee_education['education_level'] = df_enrollee_education['education_level'].astype('category')
df_enrollee_education['major_discipline'] = df_enrollee_education['major_discipline'].astype('category')

df_enrollee_education.info()

pd.unique(df_enrollee_education['major_discipline'])

"""## 1.3. Enrollee's Experiences"""

# Check datat information

df_enrollee_experiences.info()

# Correct the missing values

df_enrollee_experiences['company_size'].replace({'10/49': '10-49'}, inplace=True)

pd.unique(df_enrollee_experiences['company_size'])

# Handling Missing Data

# Define the values to fill in for missing data
fill_values = {
    'experience': 'Unknown',
    'company_size': 'Unknown',
    'company_type': 'Unknown',
    'last_new_job': 'Unknown'
}

# Fill missing values in-place
df_enrollee_experiences.fillna(value=fill_values, inplace=True)

# Convert data to category
for col in fill_values.keys():
    df_enrollee_experiences[col] = df_enrollee_experiences[col].astype('category')

df_enrollee_experiences.info()

"""## 1.4. Enrollee's Training hours"""

# check data information

df_training_hours.info()

# this data is okay

"""## 1.5. City Developement Index"""

# check data information

df_CDI.info()

# this data is good

"""## 1.6. Employment"""

# check data information

df_emploment.info()

# this data is good

"""# 3. Load Data"""

from sqlalchemy import create_engine

# Connection details
username = 'etl'
password = '488579'
host = '112.213.86.31'
port = '3360'
database = 'data_warehouse'

# Create connection engine
engine = create_engine(f'mysql+pymysql://{username}:{password}@{host}:{port}/{database}')

df_enrollies.to_sql('enrollies', con = engine, if_exists='replace', index=False)
df_enrollee_experiences.to_sql('enrollee_experiences', con = engine, if_exists='replace', index=False)
df_enrollee_education.to_sql('enrollee_education', con = engine, if_exists='replace', index=False)
df_training_hours.to_sql('training_hours', con = engine, if_exists='replace', index=False)
df_CDI.to_sql('city_development_index', con = engine, if_exists='replace', index=False)
df_emploment.to_sql('employment', con = engine, if_exists='replace', index=False)